#ifndef _GX_INTERFACE_H_
#define _GX_INTERFACE_H_

//Function pointer typedef for exported interface creation
//Such a function is generated by the REGISTER_INTERFACE() macro
typedef void* (*InstantiateInterfacePtr)();


//This class holds all interface definitions in a plugin
//The list is statically created at compiletime
//The list head is "knownInterfaces"
//For each new plugin, the DEFINE_PLUGIN() Makro needs to be executed in the cpp file
class InterfaceRegistration
{
public:
    InterfaceRegistration(InstantiateInterfacePtr instantiateProc, const char* name)
        : name(name)
    {
        instantiate = instantiateProc;

        //Prepend to static linked list
        next = knownInterfaces;
        knownInterfaces = this;
    }

    InstantiateInterfacePtr instantiate;
    const char* name;

    //linked-list pointer
    InterfaceRegistration* next;

    //static list of all registered interfaces
    static InterfaceRegistration* knownInterfaces;
};


//Define a new interface
#define REGISTER_INTERFACE(classname, interfacename, name) \
    static void* _GX_intinstantiate##classname_##interfacename() { return new classname(); } \
    static InterfaceRegistration _GX_intreg_##classname_##interfacename(_GX_intinstantiate##classname_##interfacename, name);

#endif
